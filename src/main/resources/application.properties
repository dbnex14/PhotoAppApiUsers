# port where this app will run, 0 means a random port will be assigned.  We could hardcode port to say 8080 but then
# as we start new instances of microservices, so we will need to track which port were used by which microservices
# and open app.prop file and to each instance assign a port number.  So, having it automaticall assigned is convenient.
server.port=0
# name this app will be known in eureka dashboard
spring.application.name=user-ws
# fully qualified url by which our Eureka client will communicate with Eureka server.  Port 8010 is what we specified
# in Eureka server
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
# We added devtools to have our app automatically restart and redeploy when we change java code.  Sometimes, we can
# disable this by setting to 'false'.
spring.devtools.restart.enabled=true